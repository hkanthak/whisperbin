name: ARM Build & Release

on:
  push:
    branches: [main]

jobs:

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Run Go tests
        run: go test -v -failfast ./...

  build:
    name: Build Go Binary
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Cross-compile Go binary for ARM64
        run: |
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o whisperbin ./cmd/whisperbin
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: whisperbin
          path: whisperbin

  release:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download built binary
        uses: actions/download-artifact@v4
        with:
          name: whisperbin
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image (binary only)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: ghcr.io/${{ github.repository_owner }}/whisperbin:latest
